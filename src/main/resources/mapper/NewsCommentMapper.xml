<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jbit.dao.NewsCommentMapper">
  <resultMap id="BaseResultMap" type="com.jbit.entity.NewsComment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="newsid" jdbcType="BIGINT" property="newsid" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="createDate" jdbcType="DATE" property="createdate" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, newsid, content, author, createDate
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from news_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from news_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByNewsId">
    delete from news_comment where newsid=#{newsid}
  </delete>
  <insert id="insert" parameterType="com.jbit.entity.NewsComment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into news_comment (id, newsid, content, 
      author, createDate)
    values (default, #{newsid,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR},
      #{author,jdbcType=VARCHAR}, #{createdate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.jbit.entity.NewsComment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into news_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="newsid != null">
        newsid,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="createdate != null">
        createDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="newsid != null">
        #{newsid,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jbit.entity.NewsComment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update news_comment
    <set>
      <if test="newsid != null">
        newsid = #{newsid,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        createDate = #{createdate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jbit.entity.NewsComment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update news_comment
    set newsid = #{newsid,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=DATE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>